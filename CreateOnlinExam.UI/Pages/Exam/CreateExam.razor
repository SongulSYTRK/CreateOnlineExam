@page "/createexam"
@inject IJSRuntime JSRuntime;
@inject IUnitOfWork unitofwork;

<div class="col-8">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">Create Exam</h4>

        </div>
        <div class="card-body col-8" > 
            <EditForm Model="input" OnValidSubmit="@SaveExam">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label class="col-5">
                        Title :
                    </label>
                    <InputText id="title" @bind-Value="input.Title" />
                </div>
                <div class="form-group">

                    <label class="col-5">
                        Description :
                    </label>
                    <InputText id="description" @bind-Value="input.Description" />
                </div>
                <div class="form-group">

                    <label class="col-5">
                        Exam Date :
                    </label >
                    <InputDate id="examDate" @bind-Value="input.ExamDate" />
                </div>
                <div class="form-group">

                    <label class="col-5">

                        Exam Time :
                    </label>
                    <InputNumber id="examTime" @bind-Value="input.ExamTime" />
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary btn-lg float-right">Kaydet</button>
                </div>
            </EditForm>
        </div>
        <div class="card-footer">
            <a asp-action="List" class="btn btn-block btn-dark" style="color:white;font-weight:bolder">Back To ExamList</a>
        </div>
    </div>
</div>




@code {
    private ExamPage input = new ExamPage();


    //protected async override Task OnInitializedAsync()
    //{

    //    input = new CreateExamPageDTO();



    //}

    private  void SaveExam()
    {
        unitofwork.ExamPageRepository.Add(input);

        unitofwork.Commit();
        input = new ExamPage();
        input.ExamDate = DateTime.Now;
        StateHasChanged();

    }

}
